// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_SECRETCHATMESSAGE_OBJECT
#define LQTG_TYPE_SECRETCHATMESSAGE_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/secretchatmessage.h"

#include <QPointer>
#include "encryptedfileobject.h"
#include "decryptedmessageobject.h"

class LIBQTELEGRAMSHARED_EXPORT SecretChatMessageObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(SecretChatMessageClassType)
    Q_PROPERTY(EncryptedFileObject* attachment READ attachment WRITE setAttachment NOTIFY attachmentChanged)
    Q_PROPERTY(qint32 chatId READ chatId WRITE setChatId NOTIFY chatIdChanged)
    Q_PROPERTY(qint32 date READ date WRITE setDate NOTIFY dateChanged)
    Q_PROPERTY(DecryptedMessageObject* decryptedMessage READ decryptedMessage WRITE setDecryptedMessage NOTIFY decryptedMessageChanged)
    Q_PROPERTY(qint32 ttl READ ttl WRITE setTtl NOTIFY ttlChanged)
    Q_PROPERTY(SecretChatMessage core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum SecretChatMessageClassType {
        TypeSecretChatMessage
    };

    SecretChatMessageObject(const SecretChatMessage &core, QObject *parent = 0);
    SecretChatMessageObject(QObject *parent = 0);
    virtual ~SecretChatMessageObject();

    void setAttachment(EncryptedFileObject* attachment);
    EncryptedFileObject* attachment() const;

    void setChatId(qint32 chatId);
    qint32 chatId() const;

    void setDate(qint32 date);
    qint32 date() const;

    void setDecryptedMessage(DecryptedMessageObject* decryptedMessage);
    DecryptedMessageObject* decryptedMessage() const;

    void setTtl(qint32 ttl);
    qint32 ttl() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const SecretChatMessage &core);
    SecretChatMessage core() const;

    SecretChatMessageObject &operator =(const SecretChatMessage &b);
    bool operator ==(const SecretChatMessage &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void attachmentChanged();
    void chatIdChanged();
    void dateChanged();
    void decryptedMessageChanged();
    void ttlChanged();

private Q_SLOTS:
    void coreAttachmentChanged();
    void coreDecryptedMessageChanged();

private:
    QPointer<EncryptedFileObject> m_attachment;
    QPointer<DecryptedMessageObject> m_decryptedMessage;
    SecretChatMessage m_core;
};

#endif // LQTG_TYPE_SECRETCHATMESSAGE_OBJECT
